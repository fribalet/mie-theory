function Scatter3d(m,x,N)% SCATTER3d	Plots scattering as 3d surface%		Scatter3d(m,x,N) plots a three dimensional%		surface such that its distance from the origin%		in a given direction is proportional to the%		logarithm of the intensity of light scattered%		in that direction by a particle with size and%		refractive index parametes x and m.%%		N is the resolution of the surface.%%		Colour represents distance from the origin.% Written by and copyright%		Dave Barnett%		Optical Engineering Group%		Dept. of Electrical and Electronic Engineering%		Loughborough University%		15th January 1999if nargin <3      N = 180;	% default resolution is 1 deg.end% Generate scattering data for each quarter.theta = (0:1:N)*pi/N;phi = (0:2:N)'*pi/(2*N);R = ones(length(phi), length(theta));for i=1:length(phi)   I = [1; cos(2*phi(i)); sin(2*phi(i)); 0];   S = SphereSc(m,x,I,theta);   R(i,:) = log10(S(1,:));endR = R-min(min(R));PHI = phi*ones(1,length(theta));THETA = ones(length(phi),1)*theta;% Flip quarters over into sphereX = R.*cos(THETA);A = R.*sin(THETA);Y = A.*cos(PHI);Z = A.*sin(PHI);X = [X;flipud(X)];Y = [Y;flipud(-Y)];Z = [Z;flipud(Z)];R = [R;flipud(R)];X = [X,fliplr(X)];Y = [Y,fliplr(Y)];Z = [Z,fliplr(-Z)];R = [R,fliplr(R)];% Plot surfacesurf(X,Y,Z,R)shading flataxis equalaxis offlight('Position',[0 -2 1]);view([-20 50])